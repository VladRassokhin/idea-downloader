<project name="BuildServer" default="start" basedir="." xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
  
  <property name="dest" value="c:/IDEA" />

  <taskdef uri="antlib:fr.jayasoft.ivy.ant"
           resource="fr/jayasoft/ivy/ant/antlib.xml">
    <classpath>
      <pathelement location="${basedir}/lib/ivy-2.0.jar"/>
      <pathelement location="${basedir}/lib/commons-httpclient-3.0.1.jar"/>
      <pathelement location="${basedir}/lib/commons-logging.jar"/>
      <pathelement location="${basedir}/lib/commons-codec-1.3.jar"/>
    </classpath>
  </taskdef>

 <target name="start">
   <echo>Use 'r#' for resharper update and 'idea' to idea update</echo>
   <fail/>
 </target>

 <target name="r#">
   <call target="resharper"  />
 </target>

 <target name="r#5">
   <call target="resharper5" />
 </target>

 <target name="tc">
   <call target="tc-vs-i" />
 </target>

 <target name="idea">
   <call target="idea-i" />
 </target>

 <!-- End of public API -->

 <macrodef name="call">
   <attribute name="target" />
   <sequential>
     <ant antfile="${ant.file}" target="@{target}" />
   </sequential>
 </macrodef>

 <target name="resharper">
   <delete dir="${basedir}/tools" failonerror="false" />

   <property name="ivy-conf-xml" value="${basedir}/ivy-resharper.xml" />
   <antcall target="fetch" />
   <antcall target="msi_install" />
 </target>

 <target name="resharper5">
   <delete dir="${basedir}/tools" failonerror="false" />

   <property name="ivy-conf-xml" value="${basedir}/ivy-resharper5.xml" />
   <antcall target="fetch" />
   <antcall target="msi_install" />
 </target>

 <target name="tc-vs-i">
   <delete dir="${basedir}/tools" failonerror="false" />

   <property name="ivy-conf-xml" value="${basedir}/ivy-tc-plugin.xml" />
   <antcall target="fetch" />
   <antcall target="msi_install" />
 </target>


 <target name="msi_install">
   <delete dir="${basedir}/tools/tmp" failonerror="false" />
   <mkdir dir="${basedir}/tools/tmp" />
   <copy toDir="${basedir}/tools/tmp/" overwrite="true">
     <fileset dir="${basedir}/tools">
       <include name="*.msi" />
     </fileset>
     <mapper type="regexp" from=".*\.msi" to="ReShareperSetup.msi"/>
   </copy>  

   <delete>
     <fileset dir="${basedir}/tools">
       <include name="*.msi" />
     </fileset>
   </delete>
   

   <exec executable="msiexec">
     <arg value="/i"/>
     <arg file="${basedir}/tools/tmp/ReShareperSetup.msi" />
     <arg value="/passive" />
   </exec>

   <delete dir="${basedir}/tools" failonerror="false" />
 </target>

  <target name="idea-i">
   <delete dir="${basedir}/tools" failonerror="false" />
   <property name="ivy-conf-xml" value="${basedir}/ivy-idea-trunk.xml" />
   <antcall target="fetch" />
   <antcall target="gather"/>
   <antcall target="patch"/>
   <antcall target="replace"/>
    
   <delete dir="${basedir}/tools" failonerror="false" />
 </target>


  <target name="fetch" description="Retrieves artifacts for TeamCity">
    <delete dir="${basedir}/tools" failonerror="false" />
    <mkdir dir="${basedir}/tools"/>

    <property name="ivy-conf" value="default" />
  
    <condition property="teamcity.auth.userId" value="labs\builduser">
      <not>
        <isset property="${teamcity.auth.userId}"/>
      </not>
    </condition>

    <condition property="teamcity.auth.password" value="***REMOVED***">
      <not>
        <isset property="${teamcity.auth.password}"/>
      </not>
    </condition>

    <condition property="agent.work.dir" value=".."> <!-- Ivy cache will be put there -->
      <not>
        <isset property="${agent.work.dir}"/>
      </not>
    </condition>

    <ivy:configure file="${basedir}/ivyconf.xml"
                   host="buildserver.labs.intellij.net"
                   realm="TeamCity"
                   username="${teamcity.auth.userId}"
                   passwd="${teamcity.auth.password}"/>

    <ivy:resolve file="${ivy-conf-xml}" conf="${ivy-conf}" />

    <ivy:retrieve pattern="${basedir}/tools/[artifact].[ext]" conf="${ivy-conf}"/>
  </target>

  <target name="replace">
    <delete dir="${dest}.old" failonerror="false"/>
    <mkdir dir="${dest}.old"/>
   
    <move todir="${dest}.old">
      <fileset dir="${dest}" includes="**/*" />
    </move>

    <mkdir dir="${dest}"/>

    <move todir="${dest}"> 
      <fileset dir="${basedir}/bin" includes="**/*" />
    </move>
  </target>

  <target name="gather">
    <delete dir="${basedir}/bin" failonerror="false" />
    <mkdir dir="${basedir}/bin"/>

    <unzip dest="${basedir}/bin">
      <fileset dir="${basedir}/tools" includes="idea*.zip"/>
    </unzip>

    <copy todir="${basedir}/bin/lib" overwrite="true">
      <fileset dir="${basedir}/tools/idea.jar.unscrambled.16" includes="idea.jar" />
    </copy>
  </target>

  <target name="patch">
    <property name="opts" value="${basedir}/bin/bin/idea.exe.vmoptions"/>
    
    <replaceregexp file="${opts}" match="-Xmx\d+m" replace="-Xmx1024m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-Xms\d+m" replace="-Xms192m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-XX:MaxPermSize=\d+m" replace="-XX:MaxPermSize=200m" flags="g" byline="true"/>
<!--<replaceregexp file="${opts}" match="-agentlib:yjpagent=[^,]+,sessionname=[^\s]+" replace="" flags="g" byline="true" />
    <replaceregexp file="${opts}" match="-agentlib:yjpagent=disablej2ee,disablecounts,disablealloc,sessionname=IntelliJIDEA" replace="" flags="g" byline="true" />
    -->
   
    <concat destfile="${basedir}/bin/bin/idea.exe.vmoptions" append="true">
-XX:+HeapDumpOnOutOfMemoryError
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
-agentlib:yjpagent</concat>   

    <concat destfile="${basedir}/bin/bin/idea.properties" append="true">
idea.is.internal=true
    </concat>

    <property name="props" value="${basedir}/bin/bin/idea.properties" />    
    <replaceregexp file="${props}" match="idea\.dynamic\.classpath=.*" replace="idea.dynamic.classpath=true" flags="g" byline="true"/>

    <copy file="${basedir}/run.bat" todir="${basedir}/bin" />
  </target>

</project>