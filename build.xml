<project name="BuildServer" default="start" basedir="." xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
  <property environment="env"/>
  <property name="dest" value="${basedir}/../IDEA" />

  <taskdef uri="antlib:fr.jayasoft.ivy.ant"
           resource="fr/jayasoft/ivy/ant/antlib.xml">
    <classpath>
      <pathelement location="${basedir}/lib/ivy-2.0.jar"/>
      <pathelement location="${basedir}/lib/commons-httpclient-3.0.1.jar"/>
      <pathelement location="${basedir}/lib/commons-logging.jar"/>
      <pathelement location="${basedir}/lib/commons-codec-1.3.jar"/>
    </classpath>
  </taskdef>

 <target name="start">
   <echo>Use 'idea' to update idea 10.5</echo>
   <fail/>
 </target>


 <target name="idea">
    <antcall target="idea-fetch" />
    <antcall target="idea-prepare" />
    <antcall target="idea-replace"/>
 </target>

 <target name="idea-fetch" depends="clean-fetched, initialize-ivy">
      <delete dir="${basedir}/bin" failonerror="false" />

      <fetch config="ivy-idea-10.5.xml"/>
      <fetch config="ivy-idea-plugin.xml" />
 </target>


 <target name="idea-prepare"> 
      <antcall target="gather"/>
      <antcall target="patch"/>
      <antcall target="idea-plugin"/>
 </target>


 <target name="idea-replace">
    <delete dir="${dest}.old" failonerror="false"/>
    <mkdir dir="${dest}.old"/>
   
    <move todir="${dest}.old">
      <fileset dir="${dest}" includes="**/*" />
    </move>

    <mkdir dir="${dest}"/>

    <move todir="${dest}"> 
      <fileset dir="${basedir}/bin" includes="**/*" />
    </move>
 </target>


 <!-- impl -->

 <target name="idea-plugin">
     <property name="pluginHome" value="${basedir}/bin/plugins/TeamCityIntegration" />

     <echo message="${pluginHome}" />

     <delete dir="${pluginHome}" failonerror="false" />
     <mkdir dir="${pluginHome}"/>


     <unzip dest="${pluginHome}/..">
       <fileset dir="${basedir}/tools/IDEA" includes="*.zip" />
     </unzip> 
 </target> 


 <target name="clean-fetched">
    <delete dir="${basedir}/tools" failonerror="false" />
    <mkdir dir="${basedir}/tools"/>
 </target>

 <target name="initialize-ivy" depends="do-initialize-ivy"/>

 <target name="do-initialize-ivy">
  
     <condition property="teamcity.auth.userId" value="labs\builduser">
       <not>
         <isset property="${teamcity.auth.userId}"/>
       </not>
     </condition>

     <condition property="teamcity.auth.password" value="***REMOVED***">
       <not>
         <isset property="${teamcity.auth.password}"/>
       </not>
     </condition>

     <condition property="agent.work.dir" value=".."> <!-- Ivy cache will be put there -->
       <not>
         <isset property="${agent.work.dir}"/>
       </not>
     </condition>


     <ivy:configure file="${basedir}/ivyconf.xml"
                    host="buildserver.labs.intellij.net"
                    realm="TeamCity"
                    username="${teamcity.auth.userId}"
                    passwd="${teamcity.auth.password}"/>
 </target>


 <macrodef name="fetch">
   <attribute name="config" />
   <sequential>
     <property name="ivy-conf" value="default" />

     <ivy:resolve file="${basedir}/@{config}" conf="${ivy-conf}" />
     <ivy:retrieve pattern="${basedir}/tools/[artifact].[ext]" conf="${ivy-conf}"/>
   </sequential>
 </macrodef>


  <target name="gather">
    <delete dir="${basedir}/bin" failonerror="false" />
    <mkdir dir="${basedir}/bin"/>

    <unzip dest="${basedir}/bin">
      <fileset dir="${basedir}/tools" includes="idea*.zip"/>
    </unzip>

    <copy todir="${basedir}/bin/lib" overwrite="true" flatten="true">
      <fileset dir="${basedir}/tools">
        <include name="idea.jar.unscramble.16/idea.jar" />
        <include name="idea.jar.unscramble/idea.jar" />
      </fileset>
    </copy>
  </target>

  <target name="patch">
    <property name="opts" value="${basedir}/bin/bin/idea.exe.vmoptions"/>
    
    <replaceregexp file="${opts}" match="-Xmx\d+m" replace="-Xmx1424m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-Xms\d+m" replace="-Xms512m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-XX:MaxPermSize=\d+m" replace="-XX:MaxPermSize=400m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-agentlib:yjpagent=[^,]+,sessionname=[^\s]+" replace="" flags="g" byline="true" />
    <replaceregexp file="${opts}" match="-agentlib:yjpagent=disablej2ee,disablecounts,disablealloc,sessionname=IntelliJIdea(\d*)" replace="" flags="g" byline="true" />
   
    <concat destfile="${basedir}/bin/bin/idea.exe.vmoptions" append="true">
-XX:+HeapDumpOnOutOfMemoryError
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
-XX:+UseCompressedOops
</concat>   

    <concat destfile="${basedir}/bin/bin/idea.properties" append="true">
idea.is.internal=true
update.indices.in.background=true
    </concat>

    <property name="props" value="${basedir}/bin/bin/idea.properties" />    
    <replaceregexp file="${props}" match="idea\.dynamic\.classpath=.*" replace="idea.dynamic.classpath=true" flags="g" byline="true"/>

    <copy file="${basedir}/yjpagent.dll.x64" tofile="${basedir}/bin/bin/yjpagent.dll" overwrite="true"/>

    <copy file="${basedir}/run.bat" todir="${basedir}/bin" />
  </target>

</project>