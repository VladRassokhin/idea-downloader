<project name="BuildServer" default="start" basedir="." xmlns:ivy="antlib:fr.jayasoft.ivy.ant">
  <property environment="env"/>
  <property name="dest" value="${basedir}/../IDEA" />

  <taskdef uri="antlib:fr.jayasoft.ivy.ant"
           resource="fr/jayasoft/ivy/ant/antlib.xml">
    <classpath>
      <pathelement location="${basedir}/lib/ivy-2.0.jar"/>
      <pathelement location="${basedir}/lib/commons-httpclient-3.0.1.jar"/>
      <pathelement location="${basedir}/lib/commons-logging.jar"/>
      <pathelement location="${basedir}/lib/commons-codec-1.3.jar"/>
    </classpath>
  </taskdef>

 <target name="start">
   <echo>Use 'idea' or 'idea-fetch idea-replace' to update idea IDEA Leda.12</echo>
   <fail/>
 </target>

 <target name="idea" depends="idea-fetch,idea-replace" />

 <target name="idea-clean">
    <delete dir="${basedir}/tools" failonerror="false" />
    <mkdir dir="${basedir}/tools"/>
    <delete dir="${basedir}/bin" failonerror="false" />
 </target>

 <property name="idea-version" value="ivy-idea-leda.xml" />


 <target name="idea-pre-fetch">
      <fetch config="${idea-version}"/>

      <antcall target="fetch-idea-plugin"/>
      <antcall target="fetch-kotlin"/>
      <antcall target="fetch-scala" />
 </target>

 <target name="idea-fetch">
      <antcall target="idea-clean" />

      <antcall target="idea-pre-fetch" />

      <antcall target="idea-prepare" />
      <antcall target="idea-kotlin" />
      <antcall target="idea-scala" />
 </target>

 <target name="fetch-idea-plugin">
    <!-- TODO: fetch plugin from current buildserver instance -->
    <fetch config="ivy-idea-plugin-7.1.x.xml" server="http://buildserver.labs.intellij.net" ivyconf="ivyconf.buildserver.xml" />
 </target>

 <target name="fetch-kotlin">
   <fetch config="ivy-idea-kotlin.xml" server="http://teamcity.jetbrains.com" ivyconf="ivyconf.teamcity.xml"/>
 </target>

 <target name="fetch-scala">
   <fetch config="ivy-idea-scala.xml" server="http://buildserver.labs.intellij.net" ivyconf="ivyconf.buildserver.xml"/>
 </target>


 <target name="idea-replace">
    <delete dir="${dest}.old" failonerror="false"/>
    <mkdir dir="${dest}.old"/>
   
    <move todir="${dest}.old">
      <fileset dir="${dest}" includes="**/*" />
    </move>

    <mkdir dir="${dest}"/>

    <move todir="${dest}"> 
      <fileset dir="${basedir}/bin" includes="**/*" />
    </move>
 </target>


 <!-- impl -->

 <target name="idea-prepare"> 
      <antcall target="gather"/>
      <antcall target="patch"/>
      <antcall target="idea-plugin"/>
 </target>


 <target name="idea-plugin">
     <property name="pluginHome" value="${basedir}/bin/plugins/TeamCityIntegration" />

     <echo message="${pluginHome}" />

     <delete dir="${pluginHome}" failonerror="false" />
     <mkdir dir="${pluginHome}"/>

     <unzip dest="${pluginHome}/..">
       <fileset dir="${basedir}/tools/IDEA" includes="*.zip" />
     </unzip> 
 </target> 

 <target name="idea-kotlin">
     <property name="pluginHome" value="${basedir}/bin/plugins/Kotlin" />

     <echo message="${pluginHome}" />

     <delete dir="${pluginHome}" failonerror="false" />
     <mkdir dir="${pluginHome}"/>

     <unzip dest="${pluginHome}/..">
       <fileset dir="${basedir}/tools">
         <include name="KotlinPlugin/*.zip" />
         <include name="kotlin*.zip" />
       </fileset>
     </unzip> 
 </target> 

 <target name="idea-scala">
     <property name="pluginHome" value="${basedir}/bin/plugins/Scala" />

     <echo message="${pluginHome}" />

     <delete dir="${pluginHome}" failonerror="false" />
     <mkdir dir="${pluginHome}"/>

     <unzip dest="${pluginHome}/..">
       <fileset dir="${basedir}/tools">
         <include name="scala-intellij-bin*.zip" />
       </fileset>
     </unzip> 
 </target> 


 <macrodef name="fetch">
   <attribute name="config" />
   <attribute name="server" default="buildserver.labs.intellij.net" />
   <attribute name="ivyconf" default="ivyconf.buildserver.xml" />
   <sequential>
     <ivy:configure file="${basedir}/@{ivyconf}"
                    host="@{server}"
                    realm="TeamCity"
                    username="${teamcity.auth.userId}"
                    passwd="${teamcity.auth.password}"/>


     <property name="ivy-conf" value="default" />
     <ivy:resolve file="${basedir}/@{config}" conf="${ivy-conf}" />
     <ivy:retrieve pattern="${basedir}/tools/[artifact].[ext]" conf="${ivy-conf}"/>
   </sequential>
 </macrodef>


  <target name="gather">
    <delete dir="${basedir}/bin" failonerror="false" />
    <mkdir dir="${basedir}/bin"/>

    <unzip dest="${basedir}/bin">
      <fileset dir="${basedir}/tools" includes="idea*.zip"/>
    </unzip>

    <copy todir="${basedir}/bin/lib" overwrite="true" flatten="true">
      <fileset dir="${basedir}/tools">
        <include name="idea.jar.unscramble.16/idea.jar" />
        <include name="idea.jar.unscramble/idea.jar" />
      </fileset>
    </copy>
  </target>

  <target name="patch">
    <copy file="${basedir}/bin/bin/idea64.exe.vmoptions" tofile="${basedir}/bin/bin/idea.exe.vmoptions" overwrite="true"/>
 
   <property name="opts" value="${basedir}/bin/bin/idea.exe.vmoptions"/>
    
    <replaceregexp file="${opts}" match="-Xmx\d+m" replace="-Xmx1424m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-Xms\d+m" replace="-Xms512m" flags="g" byline="true"/>
    <replaceregexp file="${opts}" match="-XX:\+HeapDumpOnOutOfMemoryError" replace="" flags="g" byline="true" />
    <replaceregexp file="${opts}" match="-XX:ReservedCodeCacheSize=\d+m" replace="" flags="g" byline="true" />
    <replaceregexp file="${opts}" match="-XX:MaxPermSize=\d+m" replace="-XX:MaxPermSize=400m" flags="g" byline="true"/>
   
    <concat destfile="${basedir}/bin/bin/idea.exe.vmoptions" append="true">
-XX:+HeapDumpOnOutOfMemoryError
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
-XX:+UseCompressedOops
-XX:ReservedCodeCacheSize=228m

</concat>   

    <copy file="${basedir}/bin/bin/idea.exe.vmoptions" tofile="${basedir}/bin/bin/idea64.exe.vmoptions" overwrite="true"/>


    <concat destfile="${basedir}/bin/bin/idea.properties" append="true">
       ## patched by jonnyzzz
    </concat>

    <property name="props" value="${basedir}/bin/bin/idea.properties" />    
    <replaceregexp file="${props}" match="idea\.dynamic\.classpath=.*" replace="idea.dynamic.classpath=true" flags="g" byline="true"/>

    <copy file="${basedir}/run.bat" todir="${basedir}/bin" />    
  </target>

</project>