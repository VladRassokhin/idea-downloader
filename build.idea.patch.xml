<project name="idea-downloader-idea-patch" default="update-idea-patch" basedir=".">
    <import file="build.idea.common.xml"/>
    
    <target name="update-idea-patch" unless="idea-fetch-only">
        <antcall target="update-idea-patch-impl"/>
    </target>

    <target name="update-idea-patch-impl"  depends="idea-properties, update-idea-patch-settings"/>


    <target name="update-idea-patch-detect-vmo" depends="update-idea-patch-detect-vmo-win,update-idea-patch-detect-vmo-mac,update-idea-patch-detect-vmo-linux">
       <echo>Actual vmoptions : ${idea-vmo-path}</echo>
       <echo>                 : ${idea-vmo-patch64}</echo>
       <echo>Actual properties: ${idea-properties-path}</echo>                          
    </target>

    <macrodef name="update-idea-patch-detect-vmo-def">
      <attribute name="infix"/>
      <sequential>
        <condition property="idea-vmo-path" value="${idea-patch-home}/bin/${idea-vmo}" 
                                             else="${idea-patch-home}/bin/@{infix}/${idea-vmo}">
          <not><available file="${idea-patch-home}/bin/@{infix}/${idea-vmo}" /></not>
        </condition>

        <condition property="idea-vmo-path64" value="${idea-patch-home}/bin/${idea-vmo64}" 
                                               else="${idea-patch-home}/bin/@{infix}/${idea-vmo64}">
          <not><available file="${idea-patch-home}/bin/@{infix}/${idea-vmo}" /></not>
        </condition>

        <condition property="idea-properties-path" value="${idea-patch-home}/bin/${idea-properties}" 
                                                    else="${idea-patch-home}/bin/@{infix}/${idea-properties}">
          <not><available file="${idea-patch-home}/bin/@{infix}/${idea-properties}" /></not>
        </condition>
      </sequential>
    </macrodef>

    <target name="update-idea-patch-detect-vmo-win" if="idea-for-win">
      <update-idea-patch-detect-vmo-def infix="win" />
    </target>

    <target name="update-idea-patch-detect-vmo-mac" if="idea-for-mac">
      <update-idea-patch-detect-vmo-def infix="mac" />
    </target>

    <target name="update-idea-patch-detect-vmo-linux" if="idea-for-linux">
      <update-idea-patch-detect-vmo-def infix="linux" />
    </target>


    <target name="update-idea-patch-settings-win" if="idea-for-win">
        <copy file="${idea-vmo-path64}" tofile="${idea-vmo-path}" overwrite="true" failonerror="false"/>

        <echo file="${idea-patch-home}/bin/jonnyzzz.bat">@call ${idea-bat} %*</echo>
    </target>

    <target name="update-idea-patch64-settings-win" if="idea-for-win">
        <copy file="${idea-vmo-path}" tofile="${idea-vmo-path64}" overwrite="true"/>
    </target>

    <target name="update-idea-patch-settings-mac" if="idea-for-mac">

    </target>

    <target name="update-idea-patch-settings-linux" if="idea-for-linux">
        <copy file="${idea-vmo-path64}" tofile="${idea-vmo-path}" overwrite="true" failonerror="false"/>

        <echo file="${idea-unpack}/bin/start.sh" append="false"><![CDATA[#!/bin/sh
script=$0
cd `dirname $script`
./${idea-sh} $*
]]></echo>
        <chmod perm="+x">
            <file file="${idea-unpack}/bin/start.sh"/>
        </chmod>
    </target>

    <target name="update-idea-patch64-settings-linux" if="idea-for-linux">
        <copy file="${idea-vmo-path}" tofile="${idea-vmo-path64}" overwrite="true" failonerror="false"/>
    </target>

    <target name="update-idea-patch-settings" depends="idea-properties,
                                                       update-idea-patch-detect-vmo,
                                                       update-idea-patch-settings-mac,
                                                       update-idea-patch-settings-win,
                                                       update-idea-patch-settings-linux,
                                                       update-idea-patch-vmo,
                                                       update-idea-patch64-settings-win,
                                                       update-idea-patch64-settings-linux,
                                                       update-idea-patch-plist,
                                                       update-idea-patch-props"/>

    <target name="update-idea-patch-vmo">
        <replaceregexp file="${idea-vmo-path}" match="-Xmx\d+m" replace="-Xmx${idea-xmx}" flags="g" byline="true"/>
        <replaceregexp file="${idea-vmo-path}" match="-Xms\d+m" replace="-Xms${idea-xms}" flags="g" byline="true"/>
        <replaceregexp file="${idea-vmo-path}" match="-XX:\+HeapDumpOnOutOfMemoryError" replace="" flags="g" byline="true" />
        <replaceregexp file="${idea-vmo-path}" match="-XX:ReservedCodeCacheSize=\d+m" replace="" flags="g" byline="true" />
        <replaceregexp file="${idea-vmo-path}" match="-XX:MaxPermSize=\d+m" replace="-XX:MaxPermSize=400m" flags="g" byline="true"/>
        <replaceregexp file="${idea-vmo-path}" match="-agentlib:yjp[^\s]+" replace="" flags="g" byline="true"/>

        <concat destfile="${idea-vmo-path}" append="true">
            -XX:+HeapDumpOnOutOfMemoryError
            -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${idea-debug-port}
            -XX:+UseCompressedOops
            -XX:ReservedCodeCacheSize=228m
        </concat>
        <replaceregexp file="${idea-vmo-path}" match="[\r\n]+" replace="${line.separator}" flags="g" byline="false"/>
        <replaceregexp file="${idea-vmo-path}" match="^\s+" replace="" flags="g" byline="true"/>

    </target>

    <target name="update-idea-patch-plist" if="idea-for-mac">
        <condition property="idea-patch-info-plist" value="${idea-patch-home}/Contents/Info.plist" else="${idea-patch-home}/Info.plist">
          <available file="${idea-patch-home}/Contents/Info.plist" />
        </condition>
        <replaceregexp file="${idea-patch-info-plist}" match="-agentlib:yjp[^\s]+" replace="" flags="g" byline="true"/>
        <replaceregexp file="${idea-patch-info-plist}" match="&lt;string&gt;1.[6789]\*&lt;/string&gt;" replace="&lt;string&gt;${idea-mac-jdk-version}*&lt;/string&gt;" flags="g" byline="true"/>
    </target>

    <target name="update-idea-patch-props">
        <property name="props" value="${idea-properties-path}"/>

        <replaceregexp file="${props}" match="idea\.dynamic\.classpath=.*" replace="idea.dynamic.classpath=true" flags="g" byline="true"/>

        <propertyfile file="${idea-temp}/properties.patch">
            <entry key="idea.config.path" value="${idea-data}/config" />
            <entry key="idea.system.path" value="${idea-data}/system" />
            <entry key="idea.plugins.path" value="${idea-data}/plugins" />
            <entry key="idea.log.path" value="${idea-data}/logs" />
        </propertyfile>

        <concat destfile="${props}" append="true">
            ## patched by jonnyzzz

        </concat>

        <concat destfile="${props}" append="true">
            <fileset dir="${idea-temp}" includes="properties.patch" />
        </concat>

        <delete file="${idea-temp}/properties.patch" />
    </target>

</project>
