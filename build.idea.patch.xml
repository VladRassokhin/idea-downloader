<project name="idea-downloader-idea-patch" default="update-idea-patch" basedir=".">
    <import file="build.idea.common.xml"/>
    
    <target name="update-idea-patch" unless="idea-fetch-only">
        <antcall target="update-idea-patch-impl"/>
    </target>

    <target name="update-idea-patch-impl"  depends="idea-properties, update-idea-patch-settings"/>







    <target name="update-idea-patch-settings-win" if="idea-for-win">
        <copy file="${idea-patch-home}/bin/${idea-exe-vmoptions64}" tofile="${idea-patch-home}/bin/${idea-vmo}" overwrite="true" failonerror="false"/>

        <echo file="${idea-patch-home}/bin/jonnyzzz.bat">@call ${idea-bat} %*</echo>
    </target>

    <target name="update-idea-patch64-settings-win" if="idea-for-win">
        <copy file="${idea-patch-home}/bin/${idea-vmo}" tofile="${idea-patch-home}/bin/${idea-exe-vmoptions64}" overwrite="true"/>
    </target>

    <target name="update-idea-patch-settings-mac" if="idea-for-mac">

    </target>

    <target name="update-idea-patch-settings-linux" if="idea-for-linux">
        <copy file="${idea-patch-home}/bin/${idea-vmo64}" tofile="${idea-patch-home}/bin/${idea-vmo}" overwrite="true" failonerror="false"/>

        <echo file="${idea-unpack}/bin/start.sh" append="false"><![CDATA[#!/bin/sh
script=$0
cd `dirname $script`
./${idea-sh} $*
]]></echo>
        <chmod perm="+x">
            <file file="${idea-unpack}/bin/start.sh"/>
        </chmod>
    </target>

    <target name="update-idea-patch64-settings-linux" if="idea-for-linux">
        <copy file="${idea-patch-home}/bin/${idea-vmo}" tofile="${idea-patch-home}/bin/${idea-vmo64}" overwrite="true" failonerror="false"/>
    </target>

    <target name="update-idea-patch-settings" depends="idea-properties,
                                                       update-idea-patch-settings-mac,
                                                       update-idea-patch-settings-win,
                                                       update-idea-patch-settings-linux,
                                                       update-idea-patch-vmo,
                                                       update-idea-patch64-settings-win,
                                                       update-idea-patch64-settings-linux,
                                                       update-idea-patch-plist,
                                                       update-idea-patch-props"/>

    <target name="update-idea-patch-vmo">
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="-Xmx\d+m" replace="-Xmx${idea-xmx}" flags="g" byline="true"/>
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="-Xms\d+m" replace="-Xms${idea-xms}" flags="g" byline="true"/>
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="-XX:\+HeapDumpOnOutOfMemoryError" replace="" flags="g" byline="true" />
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="-XX:ReservedCodeCacheSize=\d+m" replace="" flags="g" byline="true" />
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="-XX:MaxPermSize=\d+m" replace="-XX:MaxPermSize=400m" flags="g" byline="true"/>
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="-agentlib:yjp[^\s]+" replace="" flags="g" byline="true"/>

        <concat destfile="${idea-patch-home}/bin/${idea-vmo}" append="true">
            -XX:+HeapDumpOnOutOfMemoryError
            -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=${idea-debug-port}
            -XX:+UseCompressedOops
            -XX:ReservedCodeCacheSize=228m
        </concat>
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="[\r\n]+" replace="${line.separator}" flags="g" byline="false"/>
        <replaceregexp file="${idea-patch-home}/bin/${idea-vmo}" match="^\s+" replace="" flags="g" byline="true"/>

    </target>

    <target name="update-idea-patch-plist" if="idea-for-mac">
        <condition property="idea-patch-info-plist" value="${idea-patch-home}/Contents/Info.plist" else="${idea-patch-home}/Info.plist">
          <available file="${idea-patch-home}/Contents/Info.plist" />
        </condition>
        <replaceregexp file="${idea-patch-info-plist}" match="-agentlib:yjp[^\s]+" replace="" flags="g" byline="true"/>
        <replaceregexp file="${idea-patch-info-plist}" match="&lt;string&gt;1.[6789]\*&lt;/string&gt;" replace="&lt;string&gt;${idea-mac-jdk-version}*&lt;/string&gt;" flags="g" byline="true"/>
    </target>

    <target name="update-idea-patch-props">
        <property name="props" value="${idea-patch-home}/bin/idea.properties"/>

        <replaceregexp file="${props}" match="idea\.dynamic\.classpath=.*" replace="idea.dynamic.classpath=true" flags="g" byline="true"/>

        <propertyfile file="${idea-temp}/properties.patch">
            <entry key="idea.config.path" value="${idea-data}/config" />
            <entry key="idea.system.path" value="${idea-data}/system" />
            <entry key="idea.plugins.path" value="${idea-data}/plugins" />
            <entry key="idea.log.path" value="${idea-data}/logs" />
        </propertyfile>

        <concat destfile="${props}" append="true">
            ## patched by jonnyzzz

        </concat>

        <concat destfile="${props}" append="true">
            <fileset dir="${idea-temp}" includes="properties.patch" />
        </concat>

        <delete file="${idea-temp}/properties.patch" />
    </target>

</project>
